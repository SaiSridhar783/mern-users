{"version":3,"sources":["shared/components/UI/Button/Button.js","shared/components/UI/Card/Card.js","shared/hooks/useHttp.js","shared/components/UI/Modal.jsx","shared/components/UI/Map.jsx","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Button","props","href","className","size","inverse","danger","style","children","to","exact","type","onClick","disabled","Card","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","ModalMain","isOpen","onClose","title","footer","deleteHandler","bg","color","borderRadius","colorScheme","mr","variant","Map","ReactMapboxGl","accessToken","process","MapComp","lat","lng","zoom","center","containerStyle","height","width","id","layout","coordinates","PlaceItem","useDisclosure","onOpen","delisOpen","delonOpen","delonClose","userId","useSelector","state","auth","login","token","deletePlaceHandler","Authorization","onDelete","Fragment","Modal","address","as","my","fontSize","fontWeight","thickness","speed","emptyColor","mx","mb","display","status","maxWidth","src","image","alt","description","creatorId","PlaceList","items","length","map","place","key","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","fetchPlaces","delId","prevPlaces"],"mappings":"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","file":"static/js/6.bbbc09fd.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Button.css\";\n\nconst Button = (props) => {\n    if (props.href) {\n        return (\n            <a\n                className={`button button--${props.size || \"default\"} ${\n                    props.inverse && \"button--inverse\"\n                } ${props.danger && \"button--danger\"}`}\n                href={props.href}\n                style={props.style}\n            >\n                {props.children}\n            </a>\n        );\n    }\n    if (props.to) {\n        return (\n            <Link\n                to={props.to}\n                exact={props.exact}\n                className={`button button--${props.size || \"default\"} ${\n                    props.inverse && \"button--inverse\"\n                } ${props.danger && \"button--danger\"}`}\n                style={props.style}\n            >\n                {props.children}\n            </Link>\n        );\n    }\n    return (\n        <button\n            className={`button button--${props.size || \"default\"} ${\n                props.inverse && \"button--inverse\"\n            } ${props.danger && \"button--danger\"}`}\n            type={props.type}\n            onClick={props.onClick}\n            disabled={props.disabled}\n            style={props.style}\n        >\n            {props.children}\n        </button>\n    );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n\r\n    const activeHttpRequests = useRef([]);\r\n\r\n    const sendRequest = useCallback(\r\n        async (url, method = \"GET\", body = null, headers = {}) => {\r\n            setIsLoading(true);\r\n            const httpAbortCtrl = new AbortController();\r\n            activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n            try {\r\n                const response = await fetch(url, {\r\n                    method,\r\n                    body,\r\n                    headers,\r\n                    signal: httpAbortCtrl.signal,\r\n                });\r\n\r\n                const responseData = await response.json();\r\n\r\n                activeHttpRequests.current = activeHttpRequests.current.filter(\r\n                    (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n                );\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(responseData.message);\r\n                }\r\n\r\n                setIsLoading(false);\r\n                return responseData;\r\n            } catch (err) {\r\n                setError(err.message);\r\n                setIsLoading(false);\r\n                throw err;\r\n            }\r\n        },\r\n        []\r\n    );\r\n\r\n    const clearError = () => {\r\n        setError(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n            activeHttpRequests.current.forEach((abortCtrl) =>\r\n                abortCtrl.abort()\r\n            );\r\n        };\r\n    }, []);\r\n\r\n    return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from \"react\";\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    Button,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction ModalMain({\r\n    isOpen,\r\n    onClose,\r\n    children,\r\n    title,\r\n    footer,\r\n    deleteHandler,\r\n}) {\r\n    return (\r\n        <>\r\n            <Modal isOpen={isOpen} onClose={onClose} size=\"lg\">\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader\r\n                        bg=\"purple.600\"\r\n                        color=\"white\"\r\n                        borderRadius=\"6px 6px 0 0\"\r\n                    >\r\n                        {title}\r\n                    </ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody>{children}</ModalBody>\r\n\r\n                    {footer === \"map\" ? (\r\n                        <ModalFooter>\r\n                            <Button\r\n                                colorScheme=\"purple\"\r\n                                mr={3}\r\n                                onClick={onClose}\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    ) : footer === \"del\" ? (\r\n                        <ModalFooter>\r\n                            <Button colorScheme=\"red\" mr={3} onClick={onClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"solid\"\r\n                                colorScheme=\"green\"\r\n                                onClick={deleteHandler}\r\n                            >\r\n                                Continue\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    ) : (\r\n                        <ModalFooter>\r\n                            <Button colorScheme=\"red\" mr={3} onClick={onClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"solid\"\r\n                                colorScheme=\"green\"\r\n                                onClick={onClose}\r\n                            >\r\n                                Continue\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    )}\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalMain;\r\n","import React from \"react\";\r\n\r\nimport ReactMapboxGl, { Layer, Feature } from \"react-mapbox-gl\";\r\n\r\nconst Map = ReactMapboxGl({\r\n    accessToken: process.env.REACT_APP_MAPBOX_KEY,\r\n});\r\n\r\nconst MapComp = ({ lat, lng }) => {\r\n    return (\r\n        <Map\r\n            //style=\"mapbox://styles/mapbox/streets-v11\"\r\n            //eslint-disable-next-line\r\n            style=\"mapbox://styles/saisridhar/ckqz2mkxo1fqv18p3h09exyes\"\r\n            zoom={[12]}\r\n            center={[lng, lat]}\r\n            containerStyle={{\r\n                height: \"30rem\",\r\n                width: \"100%\",\r\n            }}\r\n        >\r\n            <Layer\r\n                type=\"symbol\"\r\n                id=\"marker\"\r\n                layout={{ \"icon-image\": \"geo-alt-fill\" }}\r\n            >\r\n                <Feature coordinates={[lng, lat]} />\r\n            </Layer>\r\n        </Map>\r\n    );\r\n};\r\n\r\nexport default MapComp;\r\n","import React from \"react\";\r\nimport Card from \"../../shared/components/UI/Card/Card\";\r\nimport Button from \"../../shared/components/UI/Button/Button\";\r\n\r\nimport \"./PlaceItem.css\";\r\nimport Modal from \"../../shared/components/UI/Modal.jsx\";\r\nimport Map from \"../../shared/components/UI/Map.jsx\";\r\nimport {\r\n    Alert,\r\n    AlertIcon,\r\n    Heading,\r\n    Spinner,\r\n    useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHttpClient } from \"../../shared/hooks/useHttp\";\r\n\r\nconst PlaceItem = (props) => {\r\n    const { isLoading, error, sendRequest } = useHttpClient();\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const {\r\n        isOpen: delisOpen,\r\n        onOpen: delonOpen,\r\n        onClose: delonClose,\r\n    } = useDisclosure();\r\n\r\n    const userId = useSelector((state) => state.auth.login.userId);\r\n    const token = useSelector((state) => state.auth.login.token);\r\n\r\n    const deletePlaceHandler = async () => {\r\n        try {\r\n            await sendRequest(\r\n                `${process.env.REACT_APP_BASE_URL}/places/${props.id}`,\r\n                \"DELETE\",\r\n                null,\r\n                { Authorization: `Bearer ${token}` }\r\n            );\r\n            props.onDelete(props.id);\r\n        } catch (err) {}\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onClose={onClose}\r\n                title={props.address}\r\n                footer=\"map\"\r\n            >\r\n                <Map lat={props.coordinates.lat} lng={props.coordinates.lng} />\r\n            </Modal>\r\n\r\n            <Modal\r\n                isOpen={delisOpen}\r\n                onClose={delonClose}\r\n                title=\"Are you sure you want to delete?\"\r\n                footer=\"del\"\r\n                deleteHandler={deletePlaceHandler}\r\n            >\r\n                <Heading as=\"h4\" my=\"2\" fontSize=\"1.1rem\" fontWeight=\"normal\">\r\n                    This action is irreversible and the place will be lost\r\n                    forever.\r\n                </Heading>\r\n                {isLoading ? (\r\n                    <Spinner\r\n                        thickness=\"4px\"\r\n                        speed=\"0.65s\"\r\n                        emptyColor=\"gray.200\"\r\n                        color=\"red\"\r\n                        size=\"xl\"\r\n                        mx=\"auto\"\r\n                        mb=\"1.1rem\"\r\n                        display=\"block\"\r\n                    />\r\n                ) : (\r\n                    error && (\r\n                        <Alert\r\n                            status=\"error\"\r\n                            my=\"2rem\"\r\n                            maxWidth=\"38rem\"\r\n                            mx=\"auto\"\r\n                        >\r\n                            <AlertIcon />\r\n                            {error}\r\n                        </Alert>\r\n                    )\r\n                )}\r\n            </Modal>\r\n\r\n            <li className=\"place-item\">\r\n                <Card className=\"place-item__content\">\r\n                    <div className=\"place-item__image\">\r\n                        <img src={props.image} alt={props.title} />\r\n                    </div>\r\n                    <div className=\"place-item__info\">\r\n                        <h2 className=\"place-item__title\">\r\n                            <b>{props.title}</b>\r\n                        </h2>\r\n                        <address>\r\n                            <i className=\"fa fa-location-arrow\"></i>&nbsp;&nbsp;\r\n                            {props.address}\r\n                        </address>\r\n                        <p>{props.description}</p>\r\n                    </div>\r\n                    <div className=\"place-item__actions\">\r\n                        <Button onClick={onOpen}>VIEW ON MAP</Button>\r\n                        {userId === props.creatorId && (\r\n                            <>\r\n                                <Button to={`/places/${props.id}`}>EDIT</Button>\r\n\r\n                                <Button danger onClick={delonOpen}>\r\n                                    DELETE\r\n                                </Button>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </Card>\r\n            </li>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import { Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport Button from \"../../shared/components/UI/Button/Button\";\r\nimport Card from \"../../shared/components/UI/Card/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\n\r\nimport \"./PlaceList.css\";\r\n\r\nconst PlaceList = (props) => {\r\n    if (props.items.length === 0) {\r\n        return (\r\n            <div className=\"place-list center\">\r\n                <Card>\r\n                    <Text my={3}>No Places Found. Create one ?</Text>\r\n                    <Button to=\"/places/new\">Share Place</Button>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ul className=\"place-list\">\r\n            {props.items.map((place) => (\r\n                <PlaceItem\r\n                    key={place.id}\r\n                    id={place.id}\r\n                    image={place.image}\r\n                    title={place.title}\r\n                    description={place.description}\r\n                    address={place.address}\r\n                    creatorId={place.creator}\r\n                    coordinates={place.location}\r\n                    onDelete={props.onDeletePlace}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default PlaceList;\r\n","import { Alert, AlertIcon, Spinner } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { useHttpClient } from \"../../shared/hooks/useHttp\";\r\nimport PlaceList from \"../components/PlaceList\";\r\n\r\nconst UserPlaces = () => {\r\n    const [loadedPlaces, setLoadedPlaces] = useState();\r\n    const { isLoading, error, sendRequest } = useHttpClient();\r\n\r\n    const userId = useParams().userId;\r\n\r\n    useEffect(() => {\r\n        const fetchPlaces = async () => {\r\n            try {\r\n                const response = await sendRequest(\r\n                    `${process.env.REACT_APP_BASE_URL}/places/user/${userId}`\r\n                );\r\n                setLoadedPlaces(response.place);\r\n            } catch (error) {}\r\n        };\r\n        fetchPlaces();\r\n    }, [sendRequest, userId]);\r\n\r\n    const placeDeletedHandler = (delId) => {\r\n        setLoadedPlaces((prevPlaces) =>\r\n            prevPlaces.filter((place) => place.id !== delId)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <Spinner\r\n                    thickness=\"4px\"\r\n                    speed=\"0.65s\"\r\n                    emptyColor=\"gray.200\"\r\n                    color=\"red\"\r\n                    size=\"xl\"\r\n                    mx=\"auto\"\r\n                    mb=\"1.1rem\"\r\n                    display=\"block\"\r\n                />\r\n            ) : (\r\n                error && (\r\n                    <Alert status=\"error\" my=\"2rem\" maxWidth=\"38rem\" mx=\"auto\">\r\n                        <AlertIcon />\r\n                        {error}\r\n                    </Alert>\r\n                )\r\n            )}\r\n            {loadedPlaces && (\r\n                <PlaceList\r\n                    items={loadedPlaces}\r\n                    onDeletePlace={placeDeletedHandler}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserPlaces;\r\n"],"sourceRoot":""}