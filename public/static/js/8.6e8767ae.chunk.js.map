{"version":3,"sources":["shared/components/UI/Card/Card.js","shared/components/UI/Modal.jsx","shared/components/UI/Avatar/Avatar.js","users/components/UserItem.js","users/components/UsersList.js","users/pages/Users.js"],"names":["Card","props","className","style","children","ModalMain","isOpen","onClose","title","footer","deleteHandler","size","bg","color","borderRadius","colorScheme","mr","onClick","variant","Avatar","src","image","alt","width","height","UserItem","to","id","name","placeCount","UsersList","items","length","map","user","key","_id","places","Users","useDisclosure","defaultIsOpen","getData","a","axios","get","response","useSWR","process","data","error","textAlign","thickness","speed","emptyColor","mx","mb","display","Modal","message","found","users"],"mappings":"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","file":"static/js/8.6e8767ae.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    Button,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction ModalMain({\r\n    isOpen,\r\n    onClose,\r\n    children,\r\n    title,\r\n    footer,\r\n    deleteHandler,\r\n}) {\r\n    return (\r\n        <>\r\n            <Modal isOpen={isOpen} onClose={onClose} size=\"lg\">\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader\r\n                        bg=\"purple.600\"\r\n                        color=\"white\"\r\n                        borderRadius=\"6px 6px 0 0\"\r\n                    >\r\n                        {title}\r\n                    </ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody>{children}</ModalBody>\r\n\r\n                    {footer === \"map\" ? (\r\n                        <ModalFooter>\r\n                            <Button\r\n                                colorScheme=\"purple\"\r\n                                mr={3}\r\n                                onClick={onClose}\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    ) : footer === \"del\" ? (\r\n                        <ModalFooter>\r\n                            <Button colorScheme=\"red\" mr={3} onClick={onClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"solid\"\r\n                                colorScheme=\"green\"\r\n                                onClick={deleteHandler}\r\n                            >\r\n                                Continue\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    ) : (\r\n                        <ModalFooter>\r\n                            <Button colorScheme=\"red\" mr={3} onClick={onClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"solid\"\r\n                                colorScheme=\"green\"\r\n                                onClick={onClose}\r\n                            >\r\n                                Continue\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    )}\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalMain;\r\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\r\nimport Avatar from \"../../shared/components/UI/Avatar/Avatar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../../shared/components/UI/Card/Card\";\r\nimport \"./UserItem.css\";\r\n\r\nconst UserItem = (props) => {\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar image={props.image} alt={props.name} />\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from \"react\";\r\n\r\nimport Card from \"../../shared/components/UI/Card/Card\";\r\nimport UserItem from \"./UserItem\";\r\nimport \"./UsersList.css\";\r\n\r\nconst UsersList = (props) => {\r\n    if (props.items.length === 0) {\r\n        return (\r\n            <div className=\"center\">\r\n                <Card>\r\n                    <h2>No users found</h2>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ul className=\"users-list\">\r\n            {props.items.map((user) => (\r\n                <UserItem\r\n                    key={user._id}\r\n                    id={user._id}\r\n                    image={user.image}\r\n                    name={user.name}\r\n                    placeCount={user.places.length}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default UsersList;\r\n","import React from \"react\";\r\nimport UsersList from \"../components/UsersList\";\r\nimport useSWR from \"swr\";\r\nimport axios from \"axios\";\r\nimport { Spinner, useDisclosure } from \"@chakra-ui/react\";\r\nimport Modal from \"../../shared/components/UI/Modal\";\r\n\r\nconst Users = () => {\r\n    const { isOpen, onClose } = useDisclosure({ defaultIsOpen: true });\r\n\r\n    const getData = async (key) => {\r\n        const response = await axios.get(key);\r\n        return response;\r\n    };\r\n\r\n    const { data, error } = useSWR(\r\n        `${process.env.REACT_APP_BASE_URL}/users`,\r\n        getData\r\n    );\r\n\r\n    if (!error && !data) {\r\n        return (\r\n            <div style={{ textAlign: \"center\" }}>\r\n                <Spinner\r\n                    thickness=\"4px\"\r\n                    speed=\"0.65s\"\r\n                    emptyColor=\"gray.200\"\r\n                    color=\"magenta\"\r\n                    size=\"xl\"\r\n                    mx=\"auto\"\r\n                    mb=\"1.1rem\"\r\n                    display=\"block\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <Modal isOpen={isOpen} onClose={onClose} title=\"ERROR\">\r\n                {error.message}\r\n                <br />\r\n                <br />\r\n                <b>Try again Later</b>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    let found = [];\r\n    if (data) {\r\n        found = data.data.users;\r\n    }\r\n\r\n    return <UsersList items={found} />;\r\n};\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}