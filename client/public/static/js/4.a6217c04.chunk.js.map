{"version":3,"sources":["shared/components/UI/Button/Button.js","shared/components/UI/Card/Card.js","shared/utils/validators.js","shared/hooks/useHttp.js","shared/components/UI/Modal.jsx","shared/components/UI/Input/Input.js","shared/hooks/useFormState.js","../node_modules/@chakra-ui/visually-hidden/dist/esm/visually-hidden.js","../node_modules/@chakra-ui/spinner/dist/esm/spinner.js","../node_modules/@chakra-ui/button/dist/esm/button-group.js","../node_modules/@chakra-ui/button/dist/esm/button.js","places/pages/UpdatePlace.js"],"names":["Button","props","href","className","size","inverse","danger","style","children","to","exact","type","onClick","disabled","Card","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","test","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","ModalMain","isOpen","onClose","title","footer","deleteHandler","bg","color","borderRadius","colorScheme","mr","variant","inputReducer","state","action","isTouched","Input","useReducer","valid","inputState","dispatch","id","onInput","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useFormState","initialInputs","initialFormValidity","formState","inputData","formValidity","visuallyHiddenStyle","border","clip","height","width","margin","padding","overflow","whiteSpace","position","VisuallyHidden","baseStyle","displayName","VisuallyHiddenInput","_extends","Object","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","spin","transform","Spinner","ref","styles","_omitThemingProps","_omitThemingProps$lab","_omitThemingProps$thi","thickness","_omitThemingProps$spe","speed","_omitThemingProps$emp","emptyColor","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","_className","spinnerStyles","display","borderColor","borderStyle","borderWidth","borderBottomColor","borderLeftColor","animation","div","__css","_createContext","strict","name","_createContext2","ButtonGroupProvider","useButtonGroup","ButtonGroup","_props$spacing","spacing","isAttached","isDisabled","context","groupStyles","borderEndRadius","borderStartRadius","marginStart","role","_styles$_focus","group","_omitThemingProps$isD","isActive","isFullWidth","leftIcon","rightIcon","loadingText","_omitThemingProps$ico","iconSpacing","spinner","_omitThemingProps$spi","spinnerPlacement","as","_focus","zIndex","buttonStyles","appearance","alignItems","justifyContent","userSelect","verticalAlign","outline","_useButtonType","_React$useState","_React$useState2","isButton","setIsButton","refCallback","node","tagName","undefined","useButtonType","_ref","defaultType","button","marginEnd","placement","span","opacity","_children","focusable","alignSelf","flexShrink","_extends2","_props$children","marginProp","UpdatePlace","useDisclosure","onOpen","auth","useSelector","login","loadedPlace","setLoadedPlace","placeId","useParams","history","useHistory","description","inputHandler","setFormData","process","place","fetchPlace","placeUpdateSubmitHandler","preventDefault","JSON","stringify","Authorization","token","userId","mb","Fragment","onSubmit"],"mappings":"sGAAA,mCAgDeA,IA3CA,SAACC,GACZ,OAAIA,EAAMC,KAEF,uBACIC,UAAS,yBAAoBF,EAAMG,MAAQ,UAAlC,YACLH,EAAMI,SAAW,kBADZ,YAELJ,EAAMK,QAAU,kBACpBJ,KAAMD,EAAMC,KACZK,MAAON,EAAMM,OAEZN,EAAMO,UAIfP,EAAMQ,GAEF,kBAAC,IAAD,CACIA,GAAIR,EAAMQ,GACVC,MAAOT,EAAMS,MACbP,UAAS,yBAAoBF,EAAMG,MAAQ,UAAlC,YACLH,EAAMI,SAAW,kBADZ,YAELJ,EAAMK,QAAU,kBACpBC,MAAON,EAAMM,OAEZN,EAAMO,UAKf,4BACIL,UAAS,yBAAoBF,EAAMG,MAAQ,UAAlC,YACLH,EAAMI,SAAW,kBADZ,YAELJ,EAAMK,QAAU,kBACpBK,KAAMV,EAAMU,KACZC,QAASX,EAAMW,QACfC,SAAUZ,EAAMY,SAChBN,MAAON,EAAMM,OAEZN,EAAMO,Y,iCC3CnB,2BAYeM,IARF,SAAAb,GACX,OACE,yBAAKE,UAAS,eAAUF,EAAME,WAAaI,MAAON,EAAMM,OACrDN,EAAMO,Y,qLCCAO,EAAoB,iBAAO,CAAEJ,KARX,YAUlBK,EAAsB,SAAAC,GAAG,MAAK,CACzCN,KAV+B,YAW/BM,IAAKA,IAQMC,EAAkB,iBAAO,CAAEP,KAfX,UAiBhBQ,EAAW,SAACC,EAAOC,GAC9B,IAD6C,EACzCC,GAAU,EAD+B,cAErBD,GAFqB,IAE7C,2BAAoC,CAAC,IAA1BE,EAAyB,QAxBP,YAyBvBA,EAAUZ,OACZW,EAAUA,GAAWF,EAAMI,OAAOC,OAAS,GAzBhB,cA2BzBF,EAAUZ,OACZW,EAAUA,GAAWF,EAAMI,OAAOC,QAAUF,EAAUN,KA3B3B,cA6BzBM,EAAUZ,OACZW,EAAUA,GAAWF,EAAMI,OAAOC,QAAUF,EAAUN,KA7BjC,QA+BnBM,EAAUZ,OACZW,EAAUA,IAAYF,GAASG,EAAUN,KA/BpB,QAiCnBM,EAAUZ,OACZW,EAAUA,IAAYF,GAASG,EAAUN,KAjClB,UAmCrBM,EAAUZ,OACZW,EAAUA,GAAW,iBAAiBI,KAAKN,KAnBF,8BAsB7C,OAAOE,I,0JC1CIK,EAAgB,WACzB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,qBAA1B,mBAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAqBC,iBAAO,IAE5BC,EAAcC,sBAAW,uCAC3B,WAAOC,GAAP,qCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,GAC/CX,GAAa,GACPY,EAAgB,IAAIC,gBAC1BV,EAAmBW,QAAQC,KAAKH,GAHpC,kBAM+BI,MAAMT,EAAK,CAC9BE,SACAC,OACAC,UACAM,OAAQL,EAAcK,SAVlC,cAMcC,EANd,iBAamCA,EAASC,OAb5C,WAacC,EAbd,OAeQjB,EAAmBW,QAAUX,EAAmBW,QAAQO,QACpD,SAACC,GAAD,OAAaA,IAAYV,KAGxBM,EAASK,GAnBtB,uBAoBkB,IAAIC,MAAMJ,EAAaK,SApBzC,eAuBQzB,GAAa,GAvBrB,kBAwBeoB,GAxBf,wCA0BQlB,EAAS,KAAIuB,SACbzB,GAAa,GA3BrB,+DAD2B,sDAgC3B,IAgBJ,OATA0B,qBAAU,WACN,OAAO,WAEHvB,EAAmBW,QAAQa,SAAQ,SAACC,GAAD,OAC/BA,EAAUC,cAGnB,IAEI,CAAE9B,YAAWE,QAAOI,cAAayB,WAbrB,WACf5B,EAAS,U,iCC5CjB,qCA8Ee6B,IAlEf,YAOI,IANAC,EAMD,EANCA,OACAC,EAKD,EALCA,QACAvD,EAID,EAJCA,SACAwD,EAGD,EAHCA,MACAC,EAED,EAFCA,OACAC,EACD,EADCA,cAEA,OACI,oCACI,kBAAC,IAAD,CAAOJ,OAAQA,EAAQC,QAASA,EAAS3D,KAAK,MAC1C,kBAAC,IAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CACI+D,GAAG,aACHC,MAAM,QACNC,aAAa,eAEZL,GAEL,kBAAC,IAAD,MACA,kBAAC,IAAD,KAAYxD,GAEA,QAAXyD,EACG,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIK,YAAY,SACZC,GAAI,EACJ3D,QAASmD,GAHb,UAQO,QAAXE,EACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQK,YAAY,MAAMC,GAAI,EAAG3D,QAASmD,GAA1C,SAGA,kBAAC,IAAD,CACIS,QAAQ,QACRF,YAAY,QACZ1D,QAASsD,GAHb,aASJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQI,YAAY,MAAMC,GAAI,EAAG3D,QAASmD,GAA1C,SAGA,kBAAC,IAAD,CACIS,QAAQ,QACRF,YAAY,QACZ1D,QAASmD,GAHb,kB,6EC1DtBU,G,OAAe,SAACC,EAAOC,GAC3B,OAAQA,EAAOhE,MACb,IAAK,SACH,OAAO,2BACF+D,GADL,IAEEtD,MAAOuD,EAAO1D,IACdK,QAASH,YAASwD,EAAO1D,IAAK0D,EAAOtD,cAEzC,IAAK,QACH,OAAO,2BACFqD,GADL,IAEEE,WAAW,IAGf,QACE,OAAOF,KAiEEG,IA7DD,SAAC5E,GACb,MAA+B6E,qBAAWL,EAAc,CACtDrD,MAAOnB,EAAMmB,OAAS,GACtBwD,WAAW,EACXtD,QAASrB,EAAM8E,QAAS,IAH1B,mBAAOC,EAAP,KAAmBC,EAAnB,KAMQC,EAAgBjF,EAAhBiF,GAAIC,EAAYlF,EAAZkF,QACJ/D,EAAmB4D,EAAnB5D,MAAOE,EAAY0D,EAAZ1D,QAEfkC,qBAAU,WACR2B,EAAQD,EAAI9D,EAAOE,KAClB,CAAC4D,EAAI9D,EAAOE,EAAS6D,IAExB,IAAMC,EAAgB,SAACC,GACrBJ,EAAS,CACPtE,KAAM,SACNM,IAAKoE,EAAMC,OAAOlE,MAClBC,WAAYpB,EAAMoB,cAIhBkE,EAAe,WACnBN,EAAS,CACPtE,KAAM,WAIJ6E,EACc,UAAlBvF,EAAMuF,QACJ,2BACEN,GAAIjF,EAAMiF,GACVvE,KAAMV,EAAMU,KACZ8E,YAAaxF,EAAMwF,YACnBC,SAAUN,EACVO,OAAQJ,EACRnE,MAAO4D,EAAW5D,QAGpB,8BACE8D,GAAIjF,EAAMiF,GACVU,KAAM3F,EAAM2F,MAAQ,EACpBF,SAAUN,EACVO,OAAQJ,EACRnE,MAAO4D,EAAW5D,QAIxB,OACE,yBACEjB,UAAS,wBACN6E,EAAW1D,SAAW0D,EAAWJ,WAAa,0BAGjD,2BAAOiB,QAAS5F,EAAMiF,IAAKjF,EAAM6F,OAChCN,GACCR,EAAW1D,SAAW0D,EAAWJ,WAAa,2BAAI3E,EAAM8F,c,wFC9E1DC,EAAc,SAACtB,EAAOC,GACxB,OAAQA,EAAOhE,MACX,IAAK,eACD,IAAIsF,GAAc,EAClB,IAAK,IAAMC,KAAWxB,EAAMyB,OACnBzB,EAAMyB,OAAOD,KAEdD,EADAC,IAAYvB,EAAOuB,QACLD,GAAetB,EAAOrD,QAEtB2E,GAAevB,EAAMyB,OAAOD,GAAS5E,SAG3D,OAAO,2BACAoD,GADP,IAEIyB,OAAO,2BACAzB,EAAMyB,QADP,kBAEDxB,EAAOuB,QAAU,CACd9E,MAAOuD,EAAOvD,MACdE,QAASqD,EAAOrD,WAGxBA,QAAS2E,IAEjB,IAAK,WACD,MAAO,CACHE,OAAQxB,EAAOwB,OACf7E,QAASqD,EAAOsB,aAExB,QACI,OAAOvB,IA8BJ0B,IA1BM,SAACC,EAAeC,GACjC,MAA8BxB,qBAAWkB,EAAa,CAClDG,OAAQE,EACR/E,QAASgF,IAFb,mBAAOC,EAAP,KAAkBtB,EAAlB,KAsBA,MAAO,CAACsB,EAjBanE,uBAAY,SAAC8C,EAAI9D,EAAOE,GACzC2D,EAAS,CACLtE,KAAM,eACNS,QACAE,UACA4E,QAAShB,MAEd,IAEiB9C,uBAAY,SAACoE,EAAWC,GACxCxB,EAAS,CACLtE,KAAM,WACNwF,OAAQK,EACRP,YAAaQ,MAElB,O,+FCjDIC,EAAsB,CAC/BC,OAAQ,MACRC,KAAM,2BACNC,OAAQ,MACRC,MAAO,MACPC,OAAQ,OACRC,QAAS,MACTC,SAAU,SACVC,WAAY,SACZC,SAAU,YAODC,EAAiB,YAAO,OAAQ,CACzCC,UAAWX,IAGT,MACFU,EAAeE,YAAc,kBASxB,IAAIC,EAAsB,YAAO,QAAS,CAC/CF,UAAWX,IAGT,MACFa,EAAoBD,YAAc,uBAGrB,I,OC7Cf,SAASE,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAUpC,GACpC,IAAK,IAAIqC,EAAI,EAAGA,EAAIC,UAAUnG,OAAQkG,IAAK,CACzC,IAAIE,EAASD,UAAUD,GAEvB,IAAK,IAAIG,KAAOD,EACVJ,OAAOM,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CxC,EAAOwC,GAAOD,EAAOC,IAK3B,OAAOxC,IAGO4C,MAAMC,KAAMP,WAf9B,kCAqCA,IAAIQ,EAAO,YAAU,CACnB,KAAM,CACJC,UAAW,gBAEb,OAAQ,CACNA,UAAW,oBAUJC,EAAuB,aAAW,SAAUrI,EAAOsI,GAC5D,IAAIC,EAAS,YAAe,UAAWvI,GAEnCwI,EAAoB,YAAiBxI,GACrCyI,EAAwBD,EAAkB3C,MAC1CA,OAAkC,IAA1B4C,EAAmC,aAAeA,EAC1DC,EAAwBF,EAAkBG,UAC1CA,OAAsC,IAA1BD,EAAmC,MAAQA,EACvDE,EAAwBJ,EAAkBK,MAC1CA,OAAkC,IAA1BD,EAAmC,QAAUA,EACrDE,EAAwBN,EAAkBO,WAC1CA,OAAuC,IAA1BD,EAAmC,cAAgBA,EAChE5I,EAAYsI,EAAkBtI,UAC9B8I,EA/CN,SAAuCpB,EAAQqB,GAC7C,GAAc,MAAVrB,EAAgB,MAAO,GAC3B,IAEIC,EAAKH,EAFLrC,EAAS,GACT6D,EAAa1B,OAAO2B,KAAKvB,GAG7B,IAAKF,EAAI,EAAGA,EAAIwB,EAAW1H,OAAQkG,IACjCG,EAAMqB,EAAWxB,GACbuB,EAASG,QAAQvB,IAAQ,IAC7BxC,EAAOwC,GAAOD,EAAOC,IAGvB,OAAOxC,EAmCIgE,CAA8Bb,EAAmB,CAAC,QAAS,YAAa,QAAS,aAAc,cAEtGc,EAAa,YAAG,iBAAkBpJ,GAElCqJ,EAAgBhC,EAAS,CAC3BiC,QAAS,eACTC,YAAa,eACbC,YAAa,QACbtF,aAAc,UACduF,YAAahB,EACbiB,kBAAmBb,EACnBc,gBAAiBd,EACjBe,UAAW3B,EAAO,IAAMU,EAAQ,oBAC/BN,GAEH,OAAoB,gBAAoB,IAAOwB,IAAKxC,EAAS,CAC3De,IAAKA,EACL0B,MAAOT,EACPrJ,UAAWoJ,GACVN,GAAOnD,GAAsB,gBAAoBsB,EAAgB,KAAMtB,OAGxE,MACFwC,EAAQhB,YAAc,Y,+ICtFxB,SAASE,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAUpC,GACpC,IAAK,IAAIqC,EAAI,EAAGA,EAAIC,UAAUnG,OAAQkG,IAAK,CACzC,IAAIE,EAASD,UAAUD,GAEvB,IAAK,IAAIG,KAAOD,EACVJ,OAAOM,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CxC,EAAOwC,GAAOD,EAAOC,IAK3B,OAAOxC,IAGO4C,MAAMC,KAAMP,WAuB9B,IAAIsC,EAAiB,YAAc,CACjCC,QAAQ,EACRC,KAAM,uBAEJC,EAAkB,YAAeH,EAAgB,GACjDI,EAAsBD,EAAgB,GACtCE,EAAiBF,EAAgB,GAG1BG,EAA2B,aAAW,SAAUvK,EAAOsI,GAChE,IAAInI,EAAOH,EAAMG,KACbkE,EAAcrE,EAAMqE,YACpBE,EAAUvE,EAAMuE,QAChBrE,EAAYF,EAAME,UAClBsK,EAAiBxK,EAAMyK,QACvBA,OAA6B,IAAnBD,EAA4B,SAAWA,EACjDE,EAAa1K,EAAM0K,WACnBC,EAAa3K,EAAM2K,WACnB3B,EAtCN,SAAuCpB,EAAQqB,GAC7C,GAAc,MAAVrB,EAAgB,MAAO,GAC3B,IAEIC,EAAKH,EAFLrC,EAAS,GACT6D,EAAa1B,OAAO2B,KAAKvB,GAG7B,IAAKF,EAAI,EAAGA,EAAIwB,EAAW1H,OAAQkG,IACjCG,EAAMqB,EAAWxB,GACbuB,EAASG,QAAQvB,IAAQ,IAC7BxC,EAAOwC,GAAOD,EAAOC,IAGvB,OAAOxC,EA0BIgE,CAA8BrJ,EAAO,CAAC,OAAQ,cAAe,UAAW,YAAa,UAAW,aAAc,eAErHsJ,EAAa,YAAG,uBAAwBpJ,GAExC0K,EAAU,WAAc,WAC1B,MAAO,CACLzK,KAAMA,EACNkE,YAAaA,EACbE,QAASA,EACToG,WAAYA,KAEb,CAACxK,EAAMkE,EAAaE,EAASoG,IAC5BE,EAAc,CAChBrB,QAAS,eAuBX,OAnBEqB,EAActD,EAAS,GAAIsD,EADzBH,EACsC,CACtC,uCAAwC,CACtCI,gBAAiB,GAEnB,6CAA8C,CAC5C1G,aAAc,GAEhB,uCAAwC,CACtC2G,kBAAmB,IAIiB,CACtC,kCAAmC,CACjCC,YAAaP,KAKC,gBAAoBJ,EAAqB,CAC3DlJ,MAAOyJ,GACO,gBAAoB,IAAOb,IAAKxC,EAAS,CACvDe,IAAKA,EACL2C,KAAM,QACNjB,MAAOa,EACP3K,UAAWoJ,GACVN,QClGL,SAAS,EAA8BpB,EAAQqB,GAC7C,GAAc,MAAVrB,EAAgB,MAAO,GAC3B,IAEIC,EAAKH,EAFLrC,EAAS,GACT6D,EAAa1B,OAAO2B,KAAKvB,GAG7B,IAAKF,EAAI,EAAGA,EAAIwB,EAAW1H,OAAQkG,IACjCG,EAAMqB,EAAWxB,GACbuB,EAASG,QAAQvB,IAAQ,IAC7BxC,EAAOwC,GAAOD,EAAOC,IAGvB,OAAOxC,EAGT,SAAS,IAeP,OAdA,EAAWmC,OAAOC,QAAU,SAAUpC,GACpC,IAAK,IAAIqC,EAAI,EAAGA,EAAIC,UAAUnG,OAAQkG,IAAK,CACzC,IAAIE,EAASD,UAAUD,GAEvB,IAAK,IAAIG,KAAOD,EACVJ,OAAOM,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CxC,EAAOwC,GAAOD,EAAOC,IAK3B,OAAOxC,IAGO4C,MAAMC,KAAMP,WDuE1B,MACF4C,EAAYlD,YAAc,eCzG5B,kCA0CO,IAAItH,EAAsB,aAAW,SAAUC,EAAOsI,GAC3D,IAAI4C,EAEAC,EAAQb,IACR/B,EAAS,YAAe,SAAU,EAAS,GAAI4C,EAAOnL,IAEtDwI,EAAoB,YAAiBxI,GACrCoL,EAAwB5C,EAAkBmC,WAC1CA,OAAuC,IAA1BS,EAA4C,MAATD,OAAgB,EAASA,EAAMR,WAAaS,EAC5FxJ,EAAY4G,EAAkB5G,UAC9ByJ,EAAW7C,EAAkB6C,SAC7BC,EAAc9C,EAAkB8C,YAChC/K,EAAWiI,EAAkBjI,SAC7BgL,EAAW/C,EAAkB+C,SAC7BC,EAAYhD,EAAkBgD,UAC9BC,EAAcjD,EAAkBiD,YAChCC,EAAwBlD,EAAkBmD,YAC1CA,OAAwC,IAA1BD,EAAmC,SAAWA,EAC5DhL,EAAO8H,EAAkB9H,KACzBkL,EAAUpD,EAAkBoD,QAC5BC,EAAwBrD,EAAkBsD,iBAC1CA,OAA6C,IAA1BD,EAAmC,QAAUA,EAChE3L,EAAYsI,EAAkBtI,UAC9B6L,EAAKvD,EAAkBuD,GACvB/C,EAAO,EAA8BR,EAAmB,CAAC,aAAc,YAAa,WAAY,cAAe,WAAY,WAAY,YAAa,cAAe,cAAe,OAAQ,UAAW,mBAAoB,YAAa,OAStOwD,EAAS,YAAU,GAAqE,OAAhEd,EAA2B,MAAV3C,OAAiB,EAASA,EAAe,QAAa2C,EAAiB,GAAI,CACtHe,OAAQ,IAGNC,EAAe,EAAS,CAC1B1C,QAAS,cACT2C,WAAY,OACZC,WAAY,SACZC,eAAgB,SAChBC,WAAY,OACZpF,SAAU,WACVD,WAAY,SACZsF,cAAe,SACfC,QAAS,OACT3F,MAAOyE,EAAc,OAAS,QAC7B/C,IAAU4C,GAAS,CACpBa,OAAQA,IAGNS,EAkCN,SAAuBtL,GACrB,IAAIuL,EAAkB,YAAgBvL,GAClCwL,EAAmB,YAAeD,EAAiB,GACnDE,EAAWD,EAAiB,GAC5BE,EAAcF,EAAiB,GAE/BG,EAAc,eAAkB,SAAUC,GACvCA,GACLF,EAA6B,WAAjBE,EAAKC,WAChB,IACCtM,EAAOkM,EAAW,cAAWK,EACjC,MAAO,CACL3E,IAAKwE,EACLpM,KAAMA,GA/CawM,CAAcnB,GAC/BoB,EAAOV,EAAenE,IACtB8E,EAAcX,EAAe/L,KAEjC,OAAoB,gBAAoB,IAAO2M,OAAQ,EAAS,CAC9DzM,SAAU+J,GAAc/I,EACxB0G,IAAK,YAAUA,EAAK6E,GACpBpB,GAAIA,EACJrL,KAAc,MAARA,EAAeA,EAAO0M,EAC5B,cAAe,YAAS/B,GACxB,eAAgB,YAASzJ,GACzBoI,MAAOkC,EACPhM,UAAW,YAAG,gBAAiBA,IAC9B8I,GAAOuC,IAAa3J,GAA0B,gBAAoB,EAAY,CAC/E0L,UAAW3B,GACVJ,GAAW3J,GAAkC,UAArBkK,GAA6C,gBAAoB,EAAe,CACzG5L,UAAW,gCACX2F,MAAO4F,EACP8B,UAAW,SACV3B,GAAUhK,EAAY6J,GAA4B,gBAAoB,IAAO+B,KAAM,CACpFC,QAAS,GACRlN,GAAYA,EAAUqB,GAAkC,QAArBkK,GAA2C,gBAAoB,EAAe,CAClH5L,UAAW,8BACX2F,MAAO4F,EACP8B,UAAW,OACV3B,GAAUJ,IAAc5J,GAA0B,gBAAoB,EAAY,CACnFoJ,YAAaW,GACZH,OAGD,MACFzL,EAAOsH,YAAc,UAoBvB,IAAI,EAAa,SAAoBrH,GACnC,IAAIO,EAAWP,EAAMO,SACjBL,EAAYF,EAAME,UAClB8I,EAAO,EAA8BhJ,EAAO,CAAC,WAAY,cAEzD0N,EAAyB,iBAAqBnN,GAAyB,eAAmBA,EAAU,CACtG,eAAe,EACfoN,WAAW,IACRpN,EAED+I,EAAa,YAAG,sBAAuBpJ,GAE3C,OAAoB,gBAAoB,IAAOsN,KAAM,EAAS,CAC5DhE,QAAS,cACToE,UAAW,SACXC,WAAY,GACX7E,EAAM,CACP9I,UAAWoJ,IACToE,IAGF,MACF,EAAWrG,YAAc,cAG3B,IAAI,EAAgB,SAAuBrH,GACzC,IAAI8N,EAEAjI,EAAQ7F,EAAM6F,MACd0H,EAAYvN,EAAMuN,UAClBQ,EAAkB/N,EAAMO,SACxBA,OAA+B,IAApBwN,EAA0C,gBAAoB,IAAS,CACpF5J,MAAO,eACP0C,MAAO,MACPD,OAAQ,QACLmH,EACD7N,EAAYF,EAAME,UAClB8J,EAAQhK,EAAMgK,MACdhB,EAAO,EAA8BhJ,EAAO,CAAC,QAAS,YAAa,UAAW,WAAY,YAAa,UAEvGsJ,EAAa,YAAG,yBAA0BpJ,GAE1C8N,EAA2B,UAAdT,EAAwB,YAAc,cAEnDhE,EAAgB,GAAUuE,EAAY,CACxCtE,QAAS,OACT4C,WAAY,SACZlF,SAAUrB,EAAQ,WAAa,YAC9B,YAAgBiI,EAAWE,EAAYnI,EAAQ,SAAW,GAAI,YAAgBiI,EAAW,WAAY,OAAQ,YAAgBA,EAAW,aAAc,UAAWA,GAAY9D,GAEhL,OAAoB,gBAAoB,IAAOD,IAAK,EAAS,CAC3D7J,UAAWoJ,GACVN,EAAM,CACPgB,MAAOT,IACLhJ,IAGF,MACF,EAAc8G,YAAc,kB,6LCpDf4G,UAvIK,WAChB,MAAoCC,cAA5BrK,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAASqK,EAAzB,EAAyBA,OACnBC,EAAOC,aAAY,SAAC5J,GAAD,OAAWA,EAAM2J,KAAKE,SAC/C,EAA0C5M,cAAlCE,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,MAAOI,EAA1B,EAA0BA,YAC1B,EAAsCP,qBAAtC,mBAAO4M,EAAP,KAAoBC,EAApB,KACMC,EAAUC,cAAYD,QACtBE,EAAUC,cAEhB,EAA+CzI,YAC3C,CACIpC,MAAO,CACH5C,MAAO,GACPE,SAAS,GAEbwN,YAAa,CACT1N,MAAO,GACPE,SAAS,KAGjB,GAXJ,mBAAOiF,EAAP,KAAkBwI,EAAlB,KAAgCC,EAAhC,KAcAxL,qBAAU,YACU,uCAAG,4BAAAlB,EAAA,+EAEgBH,EAAY,GAAD,OAC/B8M,yCAD+B,mBACUP,IAHrC,OAELxL,EAFK,OAKXuL,EAAevL,EAAagM,OAC5BF,EACI,CACIhL,MAAO,CACH5C,MAAO8B,EAAagM,MAAMlL,MAC1B1C,SAAS,GAEbwN,YAAa,CACT1N,MAAO8B,EAAagM,MAAMJ,YAC1BxN,SAAS,KAGjB,GAjBO,gDAoBX8M,IApBW,yDAAH,qDAuBhBe,KACD,CAAChN,EAAauM,EAASM,EAAaZ,IAEvC,IAAMgB,EAAwB,uCAAG,WAAO/J,GAAP,SAAA/C,EAAA,6DAC7B+C,EAAMgK,iBADuB,kBAGnBlN,EAAY,GAAD,OACV8M,yCADU,mBAC+BP,GAC5C,QACAY,KAAKC,UAAU,CACXvL,MAAOuC,EAAUJ,OAAOnC,MAAM5C,MAC9B0N,YAAavI,EAAUJ,OAAO2I,YAAY1N,QAE9C,CACI,eAAgB,mBAChBoO,cAAc,UAAD,OAAYnB,EAAKoB,SAZb,OAezBb,EAAQ/L,KAAK,IAAMwL,EAAKqB,OAAS,WAfR,gDAiBzBtB,IAjByB,yDAAH,sDAqB9B,OAAIvM,EAEI,yBAAK1B,UAAU,UACX,kBAAC,IAAD,CACIyI,UAAU,MACVE,MAAM,QACNE,WAAW,WACX5E,MAAM,UACNhE,KAAK,KACLuP,GAAG,YAMdnB,GAAgBzM,EAWjB,kBAAC,IAAM6N,SAAP,KACI,kBAAC,IAAD,CAAY9L,OAAQA,EAAQC,QAASA,EAASC,MAAM,UAC/CjC,IAEHF,GAAa2M,GACX,0BACIrO,UAAU,aACV0P,SAAUT,GAEV,kBAAC,IAAD,CACIlK,GAAG,QACHM,QAAQ,QACR7E,KAAK,OACLmF,MAAM,QACNzE,WAAY,CAACN,eACbgF,UAAU,8BACVZ,QAAS4J,EACT3N,MAAOoN,EAAYxK,MACnBe,OAAO,IAEX,kBAAC,IAAD,CACIG,GAAG,cACHM,QAAQ,WACRM,MAAM,cACNzE,WAAY,CAACL,YAAoB,IACjC+E,UAAU,wDACVZ,QAAS4J,EACT3N,MAAOoN,EAAYM,YACnB/J,OAAO,IAEX,kBAAC,IAAD,CAAQpE,KAAK,SAASE,UAAW0F,EAAUjF,SAA3C,kBAvCR,yBAAKnB,UAAU,UACX,kBAAC,IAAD,KACI","file":"static/js/4.a6217c04.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Button.css\";\n\nconst Button = (props) => {\n    if (props.href) {\n        return (\n            <a\n                className={`button button--${props.size || \"default\"} ${\n                    props.inverse && \"button--inverse\"\n                } ${props.danger && \"button--danger\"}`}\n                href={props.href}\n                style={props.style}\n            >\n                {props.children}\n            </a>\n        );\n    }\n    if (props.to) {\n        return (\n            <Link\n                to={props.to}\n                exact={props.exact}\n                className={`button button--${props.size || \"default\"} ${\n                    props.inverse && \"button--inverse\"\n                } ${props.danger && \"button--danger\"}`}\n                style={props.style}\n            >\n                {props.children}\n            </Link>\n        );\n    }\n    return (\n        <button\n            className={`button button--${props.size || \"default\"} ${\n                props.inverse && \"button--inverse\"\n            } ${props.danger && \"button--danger\"}`}\n            type={props.type}\n            onClick={props.onClick}\n            disabled={props.disabled}\n            style={props.style}\n        >\n            {props.children}\n        </button>\n    );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n\r\n    const activeHttpRequests = useRef([]);\r\n\r\n    const sendRequest = useCallback(\r\n        async (url, method = \"GET\", body = null, headers = {}) => {\r\n            setIsLoading(true);\r\n            const httpAbortCtrl = new AbortController();\r\n            activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n            try {\r\n                const response = await fetch(url, {\r\n                    method,\r\n                    body,\r\n                    headers,\r\n                    signal: httpAbortCtrl.signal,\r\n                });\r\n\r\n                const responseData = await response.json();\r\n\r\n                activeHttpRequests.current = activeHttpRequests.current.filter(\r\n                    (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n                );\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(responseData.message);\r\n                }\r\n\r\n                setIsLoading(false);\r\n                return responseData;\r\n            } catch (err) {\r\n                setError(err.message);\r\n                setIsLoading(false);\r\n                throw err;\r\n            }\r\n        },\r\n        []\r\n    );\r\n\r\n    const clearError = () => {\r\n        setError(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n            activeHttpRequests.current.forEach((abortCtrl) =>\r\n                abortCtrl.abort()\r\n            );\r\n        };\r\n    }, []);\r\n\r\n    return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from \"react\";\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    Button,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction ModalMain({\r\n    isOpen,\r\n    onClose,\r\n    children,\r\n    title,\r\n    footer,\r\n    deleteHandler,\r\n}) {\r\n    return (\r\n        <>\r\n            <Modal isOpen={isOpen} onClose={onClose} size=\"lg\">\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader\r\n                        bg=\"purple.600\"\r\n                        color=\"white\"\r\n                        borderRadius=\"6px 6px 0 0\"\r\n                    >\r\n                        {title}\r\n                    </ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody>{children}</ModalBody>\r\n\r\n                    {footer === \"map\" ? (\r\n                        <ModalFooter>\r\n                            <Button\r\n                                colorScheme=\"purple\"\r\n                                mr={3}\r\n                                onClick={onClose}\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    ) : footer === \"del\" ? (\r\n                        <ModalFooter>\r\n                            <Button colorScheme=\"red\" mr={3} onClick={onClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"solid\"\r\n                                colorScheme=\"green\"\r\n                                onClick={deleteHandler}\r\n                            >\r\n                                Continue\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    ) : (\r\n                        <ModalFooter>\r\n                            <Button colorScheme=\"red\" mr={3} onClick={onClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"solid\"\r\n                                colorScheme=\"green\"\r\n                                onClick={onClose}\r\n                            >\r\n                                Continue\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    )}\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalMain;\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../../utils/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\": {\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.value || \"\",\r\n    isTouched: false,\r\n    isValid: props.valid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"INPUT_CHANGE\":\r\n            let formIsValid = true;\r\n            for (const inputId in state.inputs) {\r\n                if (!state.inputs[inputId]) continue;\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid;\r\n                } else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: {\r\n                        value: action.value,\r\n                        isValid: action.isValid,\r\n                    },\r\n                },\r\n                isValid: formIsValid,\r\n            };\r\n        case \"SET_DATA\":\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst useFormState = (initialInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity,\r\n    });\r\n\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: \"INPUT_CHANGE\",\r\n            value,\r\n            isValid,\r\n            inputId: id,\r\n        });\r\n    }, []);\r\n\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: \"SET_DATA\",\r\n            inputs: inputData,\r\n            formIsValid: formValidity,\r\n        });\r\n    }, []);\r\n\r\n    return [formState, inputHandler, setFormData];\r\n};\r\n\r\nexport default useFormState;\r\n","import { chakra } from \"@chakra-ui/system\";\nimport { __DEV__ } from \"@chakra-ui/utils\";\n/**\n * Styles to visually hide an element\n * but make it accessible to screen-readers\n */\n\nexport var visuallyHiddenStyle = {\n  border: \"0px\",\n  clip: \"rect(0px, 0px, 0px, 0px)\",\n  height: \"1px\",\n  width: \"1px\",\n  margin: \"-1px\",\n  padding: \"0px\",\n  overflow: \"hidden\",\n  whiteSpace: \"nowrap\",\n  position: \"absolute\"\n};\n/**\n * Visually hidden component used to hide\n * elements on screen\n */\n\nexport var VisuallyHidden = chakra(\"span\", {\n  baseStyle: visuallyHiddenStyle\n});\n\nif (__DEV__) {\n  VisuallyHidden.displayName = \"VisuallyHidden\";\n}\n/**\n * Visually hidden input component for designing\n * custom input components using the html `input`\n * as a proxy\n */\n\n\nexport var VisuallyHiddenInput = chakra(\"input\", {\n  baseStyle: visuallyHiddenStyle\n});\n\nif (__DEV__) {\n  VisuallyHiddenInput.displayName = \"VisuallyHiddenInput\";\n}\n\nexport default VisuallyHidden;","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, keyframes, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { VisuallyHidden } from \"@chakra-ui/visually-hidden\";\nimport * as React from \"react\";\nvar spin = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\n/**\n * Spinner is used to indicate the loading state of a page or a component,\n * It renders a `div` by default.\n *\n * @see Docs https://chakra-ui.com/spinner\n */\n\nexport var Spinner = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Spinner\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      _omitThemingProps$lab = _omitThemingProps.label,\n      label = _omitThemingProps$lab === void 0 ? \"Loading...\" : _omitThemingProps$lab,\n      _omitThemingProps$thi = _omitThemingProps.thickness,\n      thickness = _omitThemingProps$thi === void 0 ? \"2px\" : _omitThemingProps$thi,\n      _omitThemingProps$spe = _omitThemingProps.speed,\n      speed = _omitThemingProps$spe === void 0 ? \"0.45s\" : _omitThemingProps$spe,\n      _omitThemingProps$emp = _omitThemingProps.emptyColor,\n      emptyColor = _omitThemingProps$emp === void 0 ? \"transparent\" : _omitThemingProps$emp,\n      className = _omitThemingProps.className,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"label\", \"thickness\", \"speed\", \"emptyColor\", \"className\"]);\n\n  var _className = cx(\"chakra-spinner\", className);\n\n  var spinnerStyles = _extends({\n    display: \"inline-block\",\n    borderColor: \"currentColor\",\n    borderStyle: \"solid\",\n    borderRadius: \"99999px\",\n    borderWidth: thickness,\n    borderBottomColor: emptyColor,\n    borderLeftColor: emptyColor,\n    animation: spin + \" \" + speed + \" linear infinite\"\n  }, styles);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: spinnerStyles,\n    className: _className\n  }, rest), label && /*#__PURE__*/React.createElement(VisuallyHidden, null, label));\n});\n\nif (__DEV__) {\n  Spinner.displayName = \"Spinner\";\n}","import _slicedToArray from \"D:\\\\Node_Git\\\\Projects\\\\mern-users-places\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { createContext } from \"@chakra-ui/react-utils\";\nimport * as React from \"react\";\n\nvar _createContext = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n}),\n    _createContext2 = _slicedToArray(_createContext, 2),\n    ButtonGroupProvider = _createContext2[0],\n    useButtonGroup = _createContext2[1];\n\nexport { useButtonGroup };\nexport var ButtonGroup = /*#__PURE__*/forwardRef(function (props, ref) {\n  var size = props.size,\n      colorScheme = props.colorScheme,\n      variant = props.variant,\n      className = props.className,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? \"0.5rem\" : _props$spacing,\n      isAttached = props.isAttached,\n      isDisabled = props.isDisabled,\n      rest = _objectWithoutPropertiesLoose(props, [\"size\", \"colorScheme\", \"variant\", \"className\", \"spacing\", \"isAttached\", \"isDisabled\"]);\n\n  var _className = cx(\"chakra-button__group\", className);\n\n  var context = React.useMemo(function () {\n    return {\n      size: size,\n      colorScheme: colorScheme,\n      variant: variant,\n      isDisabled: isDisabled\n    };\n  }, [size, colorScheme, variant, isDisabled]);\n  var groupStyles = {\n    display: \"inline-flex\"\n  };\n\n  if (isAttached) {\n    groupStyles = _extends({}, groupStyles, {\n      \"> *:first-of-type:not(:last-of-type)\": {\n        borderEndRadius: 0\n      },\n      \"> *:not(:first-of-type):not(:last-of-type)\": {\n        borderRadius: 0\n      },\n      \"> *:not(:first-of-type):last-of-type\": {\n        borderStartRadius: 0\n      }\n    });\n  } else {\n    groupStyles = _extends({}, groupStyles, {\n      \"& > *:not(style) ~ *:not(style)\": {\n        marginStart: spacing\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ButtonGroupProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    role: \"group\",\n    __css: groupStyles,\n    className: _className\n  }, rest)));\n});\n\nif (__DEV__) {\n  ButtonGroup.displayName = \"ButtonGroup\";\n}","import _defineProperty from \"D:\\\\Node_Git\\\\Projects\\\\mern-users-places\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\Node_Git\\\\Projects\\\\mern-users-places\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { mergeRefs } from \"@chakra-ui/react-utils\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, dataAttr, mergeWith, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { useButtonGroup } from \"./button-group\";\nexport var Button = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _styles$_focus;\n\n  var group = useButtonGroup();\n  var styles = useStyleConfig(\"Button\", _extends({}, group, props));\n\n  var _omitThemingProps = omitThemingProps(props),\n      _omitThemingProps$isD = _omitThemingProps.isDisabled,\n      isDisabled = _omitThemingProps$isD === void 0 ? group == null ? void 0 : group.isDisabled : _omitThemingProps$isD,\n      isLoading = _omitThemingProps.isLoading,\n      isActive = _omitThemingProps.isActive,\n      isFullWidth = _omitThemingProps.isFullWidth,\n      children = _omitThemingProps.children,\n      leftIcon = _omitThemingProps.leftIcon,\n      rightIcon = _omitThemingProps.rightIcon,\n      loadingText = _omitThemingProps.loadingText,\n      _omitThemingProps$ico = _omitThemingProps.iconSpacing,\n      iconSpacing = _omitThemingProps$ico === void 0 ? \"0.5rem\" : _omitThemingProps$ico,\n      type = _omitThemingProps.type,\n      spinner = _omitThemingProps.spinner,\n      _omitThemingProps$spi = _omitThemingProps.spinnerPlacement,\n      spinnerPlacement = _omitThemingProps$spi === void 0 ? \"start\" : _omitThemingProps$spi,\n      className = _omitThemingProps.className,\n      as = _omitThemingProps.as,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"isDisabled\", \"isLoading\", \"isActive\", \"isFullWidth\", \"children\", \"leftIcon\", \"rightIcon\", \"loadingText\", \"iconSpacing\", \"type\", \"spinner\", \"spinnerPlacement\", \"className\", \"as\"]);\n  /**\n   * When button is used within ButtonGroup (i.e flushed with sibling buttons),\n   * it is important to add a `zIndex` on focus.\n   *\n   * So let's read the component styles and then add `zIndex` to it.\n   */\n\n\n  var _focus = mergeWith({}, (_styles$_focus = styles == null ? void 0 : styles[\"_focus\"]) != null ? _styles$_focus : {}, {\n    zIndex: 1\n  });\n\n  var buttonStyles = _extends({\n    display: \"inline-flex\",\n    appearance: \"none\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    userSelect: \"none\",\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    verticalAlign: \"middle\",\n    outline: \"none\",\n    width: isFullWidth ? \"100%\" : \"auto\"\n  }, styles, !!group && {\n    _focus: _focus\n  });\n\n  var _useButtonType = useButtonType(as),\n      _ref = _useButtonType.ref,\n      defaultType = _useButtonType.type;\n\n  return /*#__PURE__*/React.createElement(chakra.button, _extends({\n    disabled: isDisabled || isLoading,\n    ref: mergeRefs(ref, _ref),\n    as: as,\n    type: type != null ? type : defaultType,\n    \"data-active\": dataAttr(isActive),\n    \"data-loading\": dataAttr(isLoading),\n    __css: buttonStyles,\n    className: cx(\"chakra-button\", className)\n  }, rest), leftIcon && !isLoading && /*#__PURE__*/React.createElement(ButtonIcon, {\n    marginEnd: iconSpacing\n  }, leftIcon), isLoading && spinnerPlacement === \"start\" && /*#__PURE__*/React.createElement(ButtonSpinner, {\n    className: \"chakra-button__spinner--start\",\n    label: loadingText,\n    placement: \"start\"\n  }, spinner), isLoading ? loadingText || /*#__PURE__*/React.createElement(chakra.span, {\n    opacity: 0\n  }, children) : children, isLoading && spinnerPlacement === \"end\" && /*#__PURE__*/React.createElement(ButtonSpinner, {\n    className: \"chakra-button__spinner--end\",\n    label: loadingText,\n    placement: \"end\"\n  }, spinner), rightIcon && !isLoading && /*#__PURE__*/React.createElement(ButtonIcon, {\n    marginStart: iconSpacing\n  }, rightIcon));\n});\n\nif (__DEV__) {\n  Button.displayName = \"Button\";\n}\n\nfunction useButtonType(value) {\n  var _React$useState = React.useState(!value),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isButton = _React$useState2[0],\n      setIsButton = _React$useState2[1];\n\n  var refCallback = React.useCallback(function (node) {\n    if (!node) return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  var type = isButton ? \"button\" : undefined;\n  return {\n    ref: refCallback,\n    type: type\n  };\n}\n\nvar ButtonIcon = function ButtonIcon(props) {\n  var children = props.children,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, [\"children\", \"className\"]);\n\n  var _children = /*#__PURE__*/React.isValidElement(children) ? /*#__PURE__*/React.cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n\n  var _className = cx(\"chakra-button__icon\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    display: \"inline-flex\",\n    alignSelf: \"center\",\n    flexShrink: 0\n  }, rest, {\n    className: _className\n  }), _children);\n};\n\nif (__DEV__) {\n  ButtonIcon.displayName = \"ButtonIcon\";\n}\n\nvar ButtonSpinner = function ButtonSpinner(props) {\n  var _extends2;\n\n  var label = props.label,\n      placement = props.placement,\n      _props$children = props.children,\n      children = _props$children === void 0 ? /*#__PURE__*/React.createElement(Spinner, {\n    color: \"currentColor\",\n    width: \"1em\",\n    height: \"1em\"\n  }) : _props$children,\n      className = props.className,\n      __css = props.__css,\n      rest = _objectWithoutPropertiesLoose(props, [\"label\", \"placement\", \"spacing\", \"children\", \"className\", \"__css\"]);\n\n  var _className = cx(\"chakra-button__spinner\", className);\n\n  var marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n\n  var spinnerStyles = _extends((_extends2 = {\n    display: \"flex\",\n    alignItems: \"center\",\n    position: label ? \"relative\" : \"absolute\"\n  }, _defineProperty(_extends2, marginProp, label ? \"0.5rem\" : 0), _defineProperty(_extends2, \"fontSize\", \"1em\"), _defineProperty(_extends2, \"lineHeight\", \"normal\"), _extends2), __css);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: _className\n  }, rest, {\n    __css: spinnerStyles\n  }), children);\n};\n\nif (__DEV__) {\n  ButtonSpinner.displayName = \"ButtonSpinner\";\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport Input from \"../../shared/components/UI/Input/Input\";\r\nimport Button from \"../../shared/components/UI/Button/Button\";\r\nimport Card from \"../../shared/components/UI/Card/Card\";\r\nimport { Spinner, useDisclosure } from \"@chakra-ui/react\";\r\nimport ErrorModal from \"../../shared/components/UI/Modal\";\r\nimport {\r\n    VALIDATOR_REQUIRE,\r\n    VALIDATOR_MINLENGTH,\r\n} from \"../../shared/utils/validators\";\r\nimport useFormState from \"../../shared/hooks/useFormState\";\r\nimport { useHttpClient } from \"../../shared/hooks/useHttp\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst UpdatePlace = () => {\r\n    const { isOpen, onClose, onOpen } = useDisclosure();\r\n    const auth = useSelector((state) => state.auth.login);\r\n    const { isLoading, error, sendRequest } = useHttpClient();\r\n    const [loadedPlace, setLoadedPlace] = useState();\r\n    const placeId = useParams().placeId;\r\n    const history = useHistory();\r\n\r\n    const [formState, inputHandler, setFormData] = useFormState(\r\n        {\r\n            title: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n            description: {\r\n                value: \"\",\r\n                isValid: false,\r\n            },\r\n        },\r\n        false\r\n    );\r\n\r\n    useEffect(() => {\r\n        const fetchPlace = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BASE_URL}/places/${placeId}`\r\n                );\r\n                setLoadedPlace(responseData.place);\r\n                setFormData(\r\n                    {\r\n                        title: {\r\n                            value: responseData.place.title,\r\n                            isValid: true,\r\n                        },\r\n                        description: {\r\n                            value: responseData.place.description,\r\n                            isValid: true,\r\n                        },\r\n                    },\r\n                    true\r\n                );\r\n            } catch (err) {\r\n                onOpen();\r\n            }\r\n        };\r\n        fetchPlace();\r\n    }, [sendRequest, placeId, setFormData, onOpen]);\r\n\r\n    const placeUpdateSubmitHandler = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            await sendRequest(\r\n                `${process.env.REACT_APP_BASE_URL}/places/${placeId}`,\r\n                \"PATCH\",\r\n                JSON.stringify({\r\n                    title: formState.inputs.title.value,\r\n                    description: formState.inputs.description.value,\r\n                }),\r\n                {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${auth.token}`,\r\n                }\r\n            );\r\n            history.push(\"/\" + auth.userId + \"/places\");\r\n        } catch (err) {\r\n            onOpen();\r\n        }\r\n    };\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"center\">\r\n                <Spinner\r\n                    thickness=\"4px\"\r\n                    speed=\"0.65s\"\r\n                    emptyColor=\"gray.200\"\r\n                    color=\"magenta\"\r\n                    size=\"xl\"\r\n                    mb=\"1.1rem\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!loadedPlace && !error) {\r\n        return (\r\n            <div className=\"center\">\r\n                <Card>\r\n                    <h2>Could not find place!</h2>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal isOpen={isOpen} onClose={onClose} title=\"FAILED\">\r\n                {error}\r\n            </ErrorModal>\r\n            {!isLoading && loadedPlace && (\r\n                <form\r\n                    className=\"place-form\"\r\n                    onSubmit={placeUpdateSubmitHandler}\r\n                >\r\n                    <Input\r\n                        id=\"title\"\r\n                        element=\"input\"\r\n                        type=\"text\"\r\n                        label=\"Title\"\r\n                        validators={[VALIDATOR_REQUIRE()]}\r\n                        errorText=\"Please enter a valid title.\"\r\n                        onInput={inputHandler}\r\n                        value={loadedPlace.title}\r\n                        valid={true}\r\n                    />\r\n                    <Input\r\n                        id=\"description\"\r\n                        element=\"textarea\"\r\n                        label=\"Description\"\r\n                        validators={[VALIDATOR_MINLENGTH(5)]}\r\n                        errorText=\"Please enter a valid description (min. 5 characters).\"\r\n                        onInput={inputHandler}\r\n                        value={loadedPlace.description}\r\n                        valid={true}\r\n                    />\r\n                    <Button type=\"submit\" disabled={!formState.isValid}>\r\n                        UPDATE PLACE\r\n                    </Button>\r\n                </form>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default UpdatePlace;\r\n"],"sourceRoot":""}